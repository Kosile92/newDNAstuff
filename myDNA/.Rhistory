str(airquality)
#get summary statistics for all variables in the data
summary(airquality)
summary(airquality$Ozone)
#data visualization plots
##boxplots and histogram of the relationship between the
#independent and dependent variable##
boxplot(airquality$Ozone)
###Ozone distribution in the data
hist(airquality$Ozone)
##plot and view the relationship between one response and one explanatory variable
plot(Ozone~Solar.R, data = airquality)
cor(airquality)
pairs(airquality)
#plot a 3d graph to view the relationship between the three variables
###Response Variables = Ozone
###explanatory variables = Wind and Solar.R
library(rgl)
plot3d(airquality,
col="green",
size=1,
type="s")
#Run a linear regression to compare the relationship
#linear model is assigned to the variable name 'air_qual'
air_qual <- lm(Ozone~Wind+Solar.R, data=airquality)
summary(air_qual)
plot(air_qual)
#fitted values show that resulting air quality (ozone) is not normally distributed
#around the residuals
#############################################################
#plot the relationship between the residuals and the variables
#to know how distributed the data point are
plot(airquality$Ozone, air_qual$residuals, xlab = "Ozone", ylab="Residuals")
abline(h=0, lty=2, col="red")
#summary of r-squared value
summary(air_qual)$r.squared
#Generate confidence intervals
confint(air_qual)
#extract model coefficients around the distribution
coef(air_qual)["Solar.R"]-1.96*(coef(summary(air_qual))[2,2])
coef(air_qual)["Solar.R"]+1.96*(coef(summary(air_qual))[2,2])
sqrt(diag(vcov(air_qual)))
#Predict response for new values of data
##compute the range of data points
range(airquality$Solar.R)
range(airquality$Wind)
predict(air_qual, newdata = data.frame(Solar.R=400,
Wind=15))
#make a new data frame to store predicted values
newdata=data.frame(Solar.R=400,
Wind=seq(15,max(airquality$Ozone), length.out = 100))
#compute the new data prediction and look at the points in the plot
predict(air_qual, newdata)
points(newdata[,2], predict(air_qual, newdata), col="red")
boxplot(airquality$Ozone)
###Ozone distribution in the data
hist(airquality$Ozone)
##plot and view the relationship between one response and one explanatory variable
plot(Ozone~Solar.R, data = airquality)
plot(air_qual)
plot(airquality$Ozone, air_qual$residuals, xlab = "Ozone", ylab="Residuals")
abline(h=0, lty=2, col="red")
head(rock)
summary(rock)
cor(rock)
pairs(rock)
boxplot(rock$area)
boxplot(rock$peri)
boxplot(rock$shape)
boxplot(rock$perm)
rock_mod1 <- lm(perm~area+peri, data = rock)
plot(rock_mod1)
summary(rock_mod1)$r.squared
confint(rock_mod1)
coef(rock_mod1)
rock_mod1$fitted.values
predict(rock_mod1)
newdata=data.frame(area = 5000, peri = seq(3000, max(rock$peri), length.out = 50))
predict(rock_mod1, newdata)
plot(perm~peri, data=rock)
points(newdata[,2], predict(rock_mod1, newdata), col = "red")
samplesize <- nrow(rock)
confidenceint <- confint(rock_mod1)
confidenceintarea <- confidenceint[2,1]
confidenceintperi <- confidenceint[3,1]
rsq <- summary(rock_mod1)$r.squared
slopearea <- summary(rock_mod1)$coefficients[[2]]
slopeperi <- summary(rock_mod1)$coefficients[[3]]
resultstable <- data.frame(samplesize, confidenceintarea, confidenceintperi, rsq, slopearea, slopeperi)
resultstable$confidenceintarea <- list(c(confidenceint[2,1],confidenceint[2,2]))
resultstable$confidenceintperi <- list(c(confidenceint[3,1], confidenceint[3,2]))
library(knitr)
kable(resultstable, caption = "Table 1: Summary Data for Linear Model")
head(rock)
summary(rock)
cor(rock)
pairs(rock)
boxplot(rock$area)
boxplot(rock$peri)
boxplot(rock$shape)
boxplot(rock$perm)
rock_mod1 <- lm(perm~area+peri, data = rock)
plot(rock_mod1)
summary(rock_mod1)$r.squared
confint(rock_mod1)
coef(rock_mod1)
rock_mod1$fitted.values
predict(rock_mod1)
newdata=data.frame(area = 5000, peri = seq(3000, max(rock$peri), length.out = 50))
predict(rock_mod1, newdata)
plot(perm~peri, data=rock)
points(newdata[,2], predict(rock_mod1, newdata), col = "red")
samplesize <- nrow(rock)
confidenceint <- confint(rock_mod1)
confidenceintarea <- confidenceint[2,1]
confidenceintperi <- confidenceint[3,1]
rsq <- summary(rock_mod1)$r.squared
slopearea <- summary(rock_mod1)$coefficients[[2]]
slopeperi <- summary(rock_mod1)$coefficients[[3]]
resultstable <- data.frame(samplesize, confidenceintarea, confidenceintperi, rsq, slopearea, slopeperi)
resultstable$confidenceintarea <- list(c(confidenceint[2,1],confidenceint[2,2]))
resultstable$confidenceintperi <- list(c(confidenceint[3,1], confidenceint[3,2]))
library(knitr)
kable(resultstable, caption = "Table 1: Summary Data for Linear Model")
View(confidenceint)
View(newdata)
View(resultstable)
help(knitr)
head(rock)
summary(rock)
cor(rock)
pairs(rock)
boxplot(rock$area)
boxplot(rock$peri)
boxplot(rock$shape)
boxplot(rock$perm)
rock_mod1 <- lm(perm~area+peri, data = rock)
plot(rock_mod1)
summary(rock_mod1)$r.squared
confint(rock_mod1)
coef(rock_mod1)
rock_mod1$fitted.values
predict(rock_mod1)
newdata=data.frame(area = 5000, peri = seq(3000, max(rock$peri), length.out = 50))
predict(rock_mod1, newdata)
plot(perm~peri, data=rock)
points(newdata[,2], predict(rock_mod1, newdata), col = "red")
samplesize <- nrow(rock)
confidenceint <- confint(rock_mod1)
confidenceintarea <- confidenceint[2,1]
confidenceintperi <- confidenceint[3,1]
rsq <- summary(rock_mod1)$r.squared
slopearea <- summary(rock_mod1)$coefficients[[2]]
slopeperi <- summary(rock_mod1)$coefficients[[3]]
resultstable <- data.frame(samplesize, confidenceintarea, confidenceintperi, rsq, slopearea, slopeperi)
resultstable$confidenceintarea <- list(c(confidenceint[2,1],confidenceint[2,2]))
resultstable$confidenceintperi <- list(c(confidenceint[3,1], confidenceint[3,2]))
library(knitr)
kable(resultstable, caption = "Table 1: Summary Data for Linear Model")
View(confidenceint)
View(newdata)
View(resultstable)
#Generate confidence intervals
confint(air_qual)
#load-in R built in Data
data()
#built in Data is assigned to a variable name
airquality
##data visualization to know the type of variables
##visualize to know the dependent and independent variables
## remove NA from the data rows and columns
airquality <- na.omit(airquality)
head(airquality)
str(airquality)
#get summary statistics for all variables in the data
summary(airquality)
summary(airquality$Ozone)
#data visualization plots
##boxplots and histogram of the relationship between the
#independent and dependent variable##
boxplot(airquality$Ozone)
###Ozone distribution in the data
hist(airquality$Ozone)
##plot and view the relationship between one response and one explanatory variable
plot(Ozone~Solar.R, data = airquality)
cor(airquality)
pairs(airquality)
#plot a 3d graph to view the relationship between the three variables
###Response Variables = Ozone
###explanatory variables = Wind and Solar.R
library(rgl)
plot3d(airquality,
col="green",
size=1,
type="s")
#Run a linear regression to compare the relationship
#linear model is assigned to the variable name 'air_qual'
air_qual <- lm(Ozone~Wind+Solar.R, data=airquality)
summary(air_qual)
plot(air_qual)
#to know how distributed the data point are
plot(airquality$Ozone, air_qual$residuals, xlab = "Ozone", ylab="Residuals")
abline(h=0, lty=2, col="red")
#summary of r-squared value
summary(air_qual)$r.squared
#Generate confidence intervals
confint(air_qual)
coef(air_qual)
View(airquality)
View(confidenceint)
View(newdata)
View(resultstable)
n <- nrow(air_qual)
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
n <- nrow(air_qual)
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
table <- data.frame(n, r_square, confi_int)
#n <- nrow(air_qual)
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
library(knitr)
kable(confi_int, caption = "Table 1: Summary Data for Linear Model")
#Run a linear regression to compare the relationship
#linear model is assigned to the variable name 'air_qual'
air_qual <- lm(Ozone~Wind+Solar.R, data=airquality)
summary(air_qual)
kable(confi_int, caption = "Table of summary for linear model")
confi_int <- confint(air_qual)
library(knitr)
kable(confi_int, caption = "Table 1: Summary Data for Linear Model")
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
library(knitr)
kable(confi_int, caption = "summary of linear model")
summaryStat <- summary(air_qual)
library(knitr)
kable(summaryStat, caption = "summary of linear model")
View(summaryStat)
View(summaryStat)
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
summaryStatWind <- summary(air_qual)$coefficients[[2]]
summaryStatSolar<- summary(air_qual)$coefficients[[3]]
final_summary<- cbind(confi_int, summaryStatWind, summaryStatSolar)
View(final_summary)
summaryStatWind <- summary(air_qual)$coefficients[2]
summaryStatSolar<- summary(air_qual)$coefficients[3]
```{r}
confi_int <- confint(air_qual)
summaryStatWind <- summary(air_qual)$coefficients[2]
summaryStatSolar<- summary(air_qual)$coefficients[3]
final_summary<- cbind(confi_int, summaryStatWind, summaryStatSolar)
View(final_summary)
View(final_summary)
summaryStatWind <- summary(air_qual)$coefficients[2]
summaryStatWind
final_summary<- rbind(confi_int, summaryStatWind, summaryStatSolar)
View(final_summary)
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
summaryStatWind <- summary(air_qual)$coefficients[2]
summaryStatSolar<- summary(air_qual)$coefficients[3]
final_summary<- cbind(confi_int, summaryStatWind, summaryStatSolar)
library(knitr)
kable(confi_int, caption = "summary of linear model")
kable(final_summary, caption = "summary of linear model")
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
summaryStatWind <- summary(air_qual)$coefficients[2]
summaryStatSolar<- summary(air_qual)$coefficients[3]
final_summary<- cbind(confi_int, summaryStatWind, summaryStatSolar)
#library(knitr)
kable(final_summary, caption = "summary of linear model")
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
summaryStatWind <- summary(air_qual)$coefficients[2]
summaryStatSolar<- summary(air_qual)$coefficients[3]
final_summary<- cbind(confi_int, summaryStatWind, summaryStatSolar)
kable(final_summary, caption = "summary of linear model")
knitr::opts_chunk$set(echo = TRUE)
data()
airquality
airquality <- na.omit(airquality)
head(airquality)
str(airquality)
cor(airquality)
pairs(airquality)
summary(airquality)
summary(airquality$Ozone)
summary(airquality$Wind)
summary(airquality$Solar.R)
boxplot(airquality$Ozone)
boxplot(airquality$Wind)
boxplot(airquality$Solar.R)
hist(airquality$Ozone)
plot(Ozone~Solar.R, data = airquality)
library(rgl)
plot3d(airquality,
col="green",
size=1,
type="s")
air_qual <- lm(Ozone~Wind+Solar.R, data=airquality)
summary(air_qual)
plot(air_qual)
plot(airquality$Ozone, air_qual$residuals, xlab = "Ozone", ylab="Residuals")
abline(h=0, lty=2, col="red")
summary(air_qual)$r.squared
#Generate confidence intervals
confint(air_qual)
coef(air_qual)
range(airquality$Solar.R)
range(airquality$Wind)
predict(air_qual, newdata = data.frame(Solar.R=400,
Wind=15))
newdata=data.frame(Solar.R=400,
Wind=seq(15,max(airquality$Ozone), length.out = 100))
predict(air_qual, newdata)
plot(Ozone~Solar.R, data=air_qual)
knitr::opts_chunk$set(echo = TRUE)
data()
airquality
airquality <- na.omit(airquality)
head(airquality)
str(airquality)
cor(airquality)
pairs(airquality)
summary(airquality)
summary(airquality$Ozone)
summary(airquality$Wind)
summary(airquality$Solar.R)
boxplot(airquality$Ozone)
boxplot(airquality$Wind)
boxplot(airquality$Solar.R)
hist(airquality$Ozone)
plot(Ozone~Solar.R, data = airquality)
library(rgl)
plot3d(airquality,
col="green",
size=1,
type="s")
air_qual <- lm(Ozone~Wind+Solar.R, data=airquality)
summary(air_qual)
plot(air_qual)
plot(airquality$Ozone, air_qual$residuals, xlab = "Ozone", ylab="Residuals")
abline(h=0, lty=2, col="red")
summary(air_qual)$r.squared
#Generate confidence intervals
confint(air_qual)
coef(air_qual)
range(airquality$Solar.R)
range(airquality$Wind)
predict(air_qual, newdata = data.frame(Solar.R=400,
Wind=15))
newdata=data.frame(Solar.R=400,
Wind=seq(15,max(airquality$Ozone), length.out = 100))
predict(air_qual, newdata)
plot(Ozone~Solar.R, data=air_quality)
knitr::opts_chunk$set(echo = TRUE)
data()
airquality
airquality <- na.omit(airquality)
head(airquality)
str(airquality)
cor(airquality)
pairs(airquality)
summary(airquality)
summary(airquality$Ozone)
summary(airquality$Wind)
summary(airquality$Solar.R)
boxplot(airquality$Ozone)
boxplot(airquality$Wind)
boxplot(airquality$Solar.R)
hist(airquality$Ozone)
plot(Ozone~Solar.R, data = airquality)
library(rgl)
plot3d(airquality,
col="green",
size=1,
type="s")
air_qual <- lm(Ozone~Wind+Solar.R, data=airquality)
summary(air_qual)
plot(air_qual)
plot(airquality$Ozone, air_qual$residuals, xlab = "Ozone", ylab="Residuals")
abline(h=0, lty=2, col="red")
summary(air_qual)$r.squared
#Generate confidence intervals
confint(air_qual)
coef(air_qual)
range(airquality$Solar.R)
range(airquality$Wind)
predict(air_qual, newdata = data.frame(Solar.R=400,
Wind=15))
newdata=data.frame(Solar.R=400,
Wind=seq(15,max(airquality$Ozone), length.out = 100))
predict(air_qual, newdata)
plot(Ozone~Solar.R, data=airquality)
points(newdata[,2], predict(air_qual, newdata), col="red")
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
summaryStatWind <- summary(air_qual)$coefficients[2]
summaryStatSolar<- summary(air_qual)$coefficients[3]
final_summary<- cbind(confi_int, summaryStatWind, summaryStatSolar)
kable(final_summary, caption = "summary of linear model")
library(knitr)
kable(final_summary, caption = "summary of linear model")
library(knit)
library(knitr)
kable(final_summary, caption = "summary of linear model")
final_summary
summaryStatWind <- summary(air_qual)$coefficients[10]
summaryStatSolar<- summary(air_qual)$coefficients[11]
final_summary<- cbind(confi_int, summaryStatWind, summaryStatSolar)
final_summary
r_square <- summary(air_qual)$r.squared
confi_int <- confint(air_qual)
Wind_pval <- summary(air_qual)$coefficients[10]
Solar_pval<- summary(air_qual)$coefficients[11]
final_summary<- cbind(confi_int, Wind_pval, Solar_pval)
final_summary
help(myDNA)
??myDNA
library(myDNA)
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/myDNA/anthrax_sasp.nuc", "character")
fastdemo <- myDNA(raw_data)
use_vignette("myDNAvignette")
library(myDNA)
??myDNA
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/myDNA/anthrax_sasp.nuc", "character")
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/myDNA/anthrax_sasp.nuc", "character")
getwd()
#setwd("~/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA")
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/myDNA/anthrax_sasp.nuc", "character")
setwd("myDNA")
library(devtools)
library(roxygen2)
find_rtools()
#setwd("~/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/myDNA")
#setwd("~/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA")
create("myDNA",
rstudio = FALSE,
roxygen = TRUE,
open = FALSE)
setwd("..")
install("myDNA")
library(myDNA)
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA/anthrax_sasp.nuc", "character")
fastdemo <- myDNA(raw_data)
use_vignette("myDNAvignette")
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA/anthrax_sasp.nuc", "character")
fastdemo <- myDNA(raw_data)
library(devtools)
library(roxygen2)
find_rtools()
#setwd("~/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA")
create("myDNA",
rstudio = FALSE,
roxygen = TRUE,
open = FALSE)
setwd("myDNA")
document()
setwd("..")
install("myDNA")
library(myDNA)
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA/anthrax_sasp.nuc", "character")
fastdemo <- myDNA(raw_data)
fastdemo <- read_nuc(raw_data)
library(devtools)
library(roxygen2)
find_rtools()
#setwd("~/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA")
create("myDNA",
rstudio = FALSE,
roxygen = TRUE,
open = FALSE)
setwd("myDNA")
document()
setwd("..")
install("myDNA")
library(myDNA)
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA/anthrax_sasp.nuc", "character")
fastdemo <- read_nuc(raw_data)
fastdemo <- read_nuc(raw_data)
library(devtools)
library(roxygen2)
find_rtools()
#setwd("~/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA")
setwd("myDNA")
document()
setwd("..")
install("myDNA")
library(myDNA)
library(devtools)
library(roxygen2)
find_rtools()
#setwd("~/Data analysis with R/myDNA")
setwd("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA")
setwd("myDNA")
document()
setwd("..")
install("myDNA")
library(myDNA)
raw_data <- scan("C:/Users/akink/Desktop/Data analysis with R/my packages/myDNA/anthrax_sasp.nuc", "character")
ls.str(package="myDNA")
